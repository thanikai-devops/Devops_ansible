@Library ('my_shared_library') _ 

pipeline {
    agent {
        label "JenkinsWorker"
    }
    environment{
        AWS_REGION = "ap-south-1"
        ECR_REPOS_API = "829173323501.dkr.ecr.ap-south-1.amazonaws.com/api-sd"
        ECR_REPOS_CRON = "829173323501.dkr.ecr.ap-south-1.amazonaws.com/cron-sd"
        BUILD_NUMER = "${env.BUILD_NUMBER}"
        
    }
    stages{
        stage("checkout SCM"){
            steps{
                script{
                    echo "******************* Sportsdata *******************"
                    checkoutCode.scmcheckout("https://SciflareIT@bitbucket.org/fantasysportpro/fantasypro_sportsdata.git","master")
                }
            }
        }
        stage("Build Docker Images"){
            steps{
                script{
                    def dockerpathapi = "api/dockerfile.api"
                    def dockerpathcron = "cron/dockerfile.cron"
                    sh "pwd"
                    echo "Build Docker Images api-sd"
                    build.ecrLoginBuildAndPush(AWS_REGION ,ECR_REPOS_API ,BUILD_NUMBER,dockerpathapi)
                    echo "Build Docker Image Cron-sd"
                    build.ecrLoginBuildAndPush(AWS_REGION,ECR_REPOS_CRON, BUILD_NUMBER,dockerpathcron)
                }
            }
        }
        // stage("Remove Old DockerImages And Containers"){
        //     steps{
        //         script{
        //             echo "*** Delete Old Images ***"
        //             sh "docker system prune -a -f"
        //         }
        //     }
        // }
    }
}