@Library ('my_shared_library') _ 

pipeline {
    agent {
        label "JenkinsWorker"
    }
    environment{
        AWS_REGION = "ap-south-1"
        ECR_REPOS_API = "829173323501.dkr.ecr.ap-south-1.amazonaws.com/api-sd"
        ECR_REPOS_CRON = "829173323501.dkr.ecr.ap-south-1.amazonaws.com/cron-sd"
        BUILD_NUMER = "${env.BUILD_NUMBER}"
        PLAYBOOK_API = "../playbook/sportdata_prod/deployapi.yml"
        PLAYBOOK_CRON = "../playbook/sportsdata_prod/deployapi.yml"
    }
    stages{
        stage("checkout SCM"){
            steps{
                script{
                    echo "******************* Sportsdata *******************"
                    checkoutCode.scmcheckout("https://SciflareIT@bitbucket.org/fantasysportpro/fantasypro_sportsdata.git","master")
                }
            }
        }
        stage("Build Docker Images API & CRON"){
            steps{
                script{
                    dir("api"){
                        sh "pwd"
                        echo "Build Docker Images api-sd"
                        echo "ECR REPO ${ECR_REPOS_API}"
                        build.ecrLoginBuildAndPush(AWS_REGION ,ECR_REPOS_API ,BUILD_NUMBER)
                    }
                    dir("cron"){
                        echo "Build Docker Images api-sd"
                        echo "ECR REPO ${ECR_REPOS_CRON}"
                        build.ecrLoginBuildAndPush(AWS_REGION ,ECR_REPOS_CRON ,BUILD_NUMBER)
                    }       
                }
            }
        }
        stage("Ansible - Deploy Into Application Server"){
            steps{
                script{
                    sh "pwd"
                    echo "Deploy Container into Application Server"
                    deploy.ansibledeploymentIntoServer(PLAYBOOK_API)
                    // deploy.ansibledeploymentIntoServer(PLAYBOOK_CRON)
                }
            }
        }
    }
}